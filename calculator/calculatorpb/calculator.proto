syntax = "proto3";

package calculator;
option go_package="/calculatorpb";

message Numbers{
    int32 first_number = 1;
    int32 second_number = 2;
}

message SumRequest{
    Numbers numbers = 1;
}

message SumResponse{
    int32 result = 1;
}

message PrimeNumberDecompositionRequest{
    int32 number = 1;
}

message PrimeNumberDecompositionResponse{
    int32 result = 1;
}

message ComputeAverageRequest{
    int32 number = 1;
}

message ComputeAverageResponse{
    double result = 1;
}

message FindMaximumRequest{
    int32 number = 1;
}

message FindMaximumResponse{
    int32 result = 1;
}

message SquareRootRequest{
    int32 number = 1;
}

message SquareRootResponse{
    double number_root = 1;
}

service CalculatorService{
    // Unary
    rpc Sum(SumRequest) returns (SumResponse){};

    // Server Streaming
    rpc PrimeNumberDecomposition(PrimeNumberDecompositionRequest) returns (stream PrimeNumberDecompositionResponse){};

    // Client Streaming
    rpc ComputeAverage(stream ComputeAverageRequest) returns (ComputeAverageResponse){};

    // Bi Directional Streaming
    rpc FindMaximum(stream FindMaximumRequest) returns (stream FindMaximumResponse) {};

    // Unary
    // error handling this RPC will throw an exception if the sent number is negative
    // The error being sent is of type INVALID_ARGUMENT
    rpc SquareRoot(SquareRootRequest) returns (SquareRootResponse){};
}